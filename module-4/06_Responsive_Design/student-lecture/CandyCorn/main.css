:root {
  --orange: #f7921c;
  --grey: #f2f2f4;
  --dark-grey: rgba(50, 53, 62, 0.05);
  --black: rgba(60, 60, 60, 1);
  font-size: 16px;
}

html {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 80 40' width='80' height='40'%3E%3Cpath fill='%23f7921c' fill-opacity='0.14' d='M0 40a19.96 19.96 0 0 1 5.9-14.11 20.17 20.17 0 0 1 19.44-5.2A20 20 0 0 1 20.2 40H0zM65.32.75A20.02 20.02 0 0 1 40.8 25.26 20.02 20.02 0 0 1 65.32.76zM.07 0h20.1l-.08.07A20.02 20.02 0 0 1 .75 5.25 20.08 20.08 0 0 1 .07 0zm1.94 40h2.53l4.26-4.24v-9.78A17.96 17.96 0 0 0 2 40zm5.38 0h9.8a17.98 17.98 0 0 0 6.67-16.42L7.4 40zm3.43-15.42v9.17l11.62-11.59c-3.97-.5-8.08.3-11.62 2.42zm32.86-.78A18 18 0 0 0 63.85 3.63L43.68 23.8zm7.2-19.17v9.15L62.43 2.22c-3.96-.5-8.05.3-11.57 2.4zm-3.49 2.72c-4.1 4.1-5.81 9.69-5.13 15.03l6.61-6.6V6.02c-.51.41-1 .85-1.48 1.33zM17.18 0H7.42L3.64 3.78A18 18 0 0 0 17.18 0zM2.08 0c-.01.8.04 1.58.14 2.37L4.59 0H2.07z'%3E%3C/path%3E%3C/svg%3E");
}

* {
  box-sizing: border-box;
  font-family: "Roboto Slab", serif;
}

/* Resets */
ul {
  margin: 0;
  padding: 0;
}

/* Resets */
img {
  width: 100%;
  height: 100%;
}

a {
  color: var(--black);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.center {
  display: block;
  margin: 0 auto;
}

/* 1. Grid Layout 
  NOTE: We start out mobile-first. There are no media queries, and we build the page to look decent
  on a phone.  

  The body element is a grid. THe grid has only one column, so everything shows vertically.

  It looks fine on a phone, but on wide screens, not great.

*/

body {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "header"
    "nav"
    "main"
    "order-now"
    "store";
  grid-gap: 10px;
}

/* 2. Define Grid Areas  - match up our content to our grid sections.*/

header {
  grid-area: header;
}

nav {
  grid-area: nav;
}

main {
  grid-area: main;
}

#order-now {
  grid-area: order-now;
}

#store {
  grid-area: store;
}

main,
#order-now,
#store {
  background-color: var(--grey);
  border: 1px solid var(--dark-grey);
  border-radius: 5px;
  padding: 10px;

  opacity: 0.9;
}

/* 3. NAV */
/* Organize Nav Items */
/* 
  NOTE: The nav ul is a flexbox. Flex-direction is column by default (remember, mobile first), meaning the nav items
  (the li's) will be stacked.  Again, fine for the phone, but a little homely on a wide screen.
*/
nav ul {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex-wrap: wrap;
}

nav ul li {
  /* Layout */
  list-style: none;
  margin: 5px 0px;

  /* Spacing */
  text-align: center;
  line-height: 2rem;

  /* Color */
  background-color: var(--orange);
  opacity: 0.9;

  /* Border */
  border-radius: 5px;
}

nav li a {
  text-transform: uppercase;
  font-weight: bold;
}

/* 3. MAIN */
/**
  NOTE that our main area is a flexbox also.  It too has flex-direction of row, so that the photo 
  (when it shows) stacks on top of the text.  Later we will change this.
**/
main {
  display: flex;
  flex-direction: column;
}

/* 3. Store Link */
#store h3 {
  text-align: center;
}

.store-button {
  padding: 10px;
  border-radius: 5px;

  color: var(--grey);
  background-color: var(--black);

  text-align: center;
  text-transform: uppercase;
}

/**
NOTE: On mobile, we do not show the candy-corn image at all.  It's in the HTML, 
but hidden here with display: none
**/
main div.poster {
  display: none;
  height: 200px;
}
  /* We don't want to squish the image */
  div.poster img {
    object-fit: cover;
  }


/***
We'll add a couple breakpoints using media queries.
***/

/*** 768 px (tablet)
  For the first, once we get wide enough,
  the nav items should be placed across the page, not stacked.

  We'll also show the candy-corn image (div.poster) since we have more room
***/



/*** 1024 px (desktop)
  Once we get desktop-wide, we can stand to add some columns to make our page more appealing.

  We do this by re-defining the grid.  The match between page elements and grid-area-names remains the same.
  We just redefine where the grid-area-names show up in the grid.

  
***/


